@using Influence.Domain
@model Influence.Web.Models.SessionModel
@{
    var session = Model.Session;
    if (session == null)
    {
        Response.Redirect("/");
        return;
    }
}

<h1>Session: @session.Name</h1>
@session.Id
<br />

@if (!session.IsTournamentSession && session.GameState.GamePhase == Consts.GamePhase.NotStarted)
{
    <br />
    <button class="btnStartGame">Start game</button>
}

<div id="sessionContainer">

    <table>
        
        <tr>
            <td>Type</td>
            <td>@(session.IsTournamentSession ? "Tournament" : "Regular")</td>
        </tr>        
        
          <tr>
            <td colspan="2" style="height: 15px"></td>
        </tr>

        <tr>
            <td>Players</td>
            <td>
                @foreach (var player in session.Players)
                {
                    <span style="color: rgb(@player.ColorRgbCsv)">
                        @player.Name
                    </span>
                }
            </td>
        </tr>

        <tr>
            <td colspan="2" style="height: 15px"></td>
        </tr>

        <tr>
            <td>Round</td>
            <td>@session.RoundNumber</td>
        </tr>

        <tr>
            <td>State</td>
            <td>@session.GameState.GamePhase</td>
        </tr>

        <tr>
            <td colspan="2" style="height: 15px"></td>
        </tr>

        <tr>
            <td>Current player</td>
            <td>
                @if (session.GameState.CurrentPlayer != null)
                {
                    <span style="color: rgb(@session.GameState.CurrentPlayer.ColorRgbCsv)">
                        @session.GameState.CurrentPlayer.Name
                    </span>
                }
                else
                {
                    <text>N/A</text>
                }
            </td>
        </tr>

        <tr>
            <td>Phase</td>
            <td>@session.GameState.PlayerPhase</td>
        </tr>

    </table>


    @if (session.CurrentBoard != null)
    {
        @Html.Partial("Board", session.CurrentBoard)
    }
</div>

@if (session.GameState.GamePhase == Consts.GamePhase.NotStarted && !session.IsTournamentSession)
{
    <br />
    <br />
    <h1>Add players to this game</h1>
    <table>
        @foreach (var bot in Model.AvailableBots)
        {
            <tr>
                <td><button class="btnJoinBot" data-foldername="@bot.FolderName">Request to join</button></td>
                <td>@bot.Name</td>
                <td>@bot.FolderName</td>
            </tr>
        }
    </table>
}

<script src="/Scripts/jquery-3.3.1.min.js"></script>
<script>

    $(document).ready(function () {

        $(".btnStartGame").click(function () {
            $.get("/Session/StartGame?sessionId=@Model.Session.Id", function(response) { location.reload(); });
        });

        $(".btnJoinBot").click(function() {
            var folderName = $(this).data("foldername");
            console.log(folderName);
            $.get("/Session/JoinBot?folderName=" + folderName + "&sessionId=@Model.Session.Id");
        });

        function refreshStuff() {
                $.ajax(
                    {
                        url: "/Session?sessionId=@Model.Session.Id",
                        type: "GET",
                        success: function(response) {
                            var soDirty = $(response).find("#sessionContainer");
                            $("#sessionContainer").replaceWith(soDirty);
                        },
                        error: function(error) { location.redirect("/"); }
                    })
            };
            

        setInterval(refreshStuff, 50);
    });

</script>